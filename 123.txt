#存储边、面与节点信息
edge = gpd.read_file(filepath+r'广东省高速公路_简化_边.json')
node = gpd.read_file(filepath+r'广东省高速公路_简化_节点.json')
station2node = pd.read_csv(filepath+r'收费站节点对应网络节点的编号.csv')
# 将station2node转换为字典
station2node_dict = station2node.set_index('station_id')['node_id'].to_dict()
# 构建网络
G_edges = edge[['u','v','length']].values
G_nodes = list(node['id'])
import networkx as nx
#先创建一个有向图
G = nx.DiGraph()
#添加节点
G.add_nodes_from(G_nodes) 
#添加边
G.add_weighted_edges_from(G_edges)
# 获取最短路径
def get_agent_path(agent):
    start_node = station2node_dict[agent['O']]
    end_node = station2node_dict[agent['D']]
    # 最短路径
    shortest_path = nx.shortest_path(G, source=start_node, target=end_node,weight = 'length')
    # 获取edge_id和cumsumlenth
    path = pd.DataFrame(shortest_path,columns=['u'])
    path['u'] = path['u'].astype(int)
    path['v'] = path['u'].shift(-1).fillna(0).astype(int)
    path = path.iloc[:-1]
    path_edge = pd.merge(path,edge)
    path = list(path_edge['edge_id'])
    cumsumlength = list(path_edge['length'].cumsum())
    return path,cumsumlength

from pandarallel import pandarallel
pandarallel.initialize(progress_bar=True)

#为每个agent计算
r = agent_data.parallel_apply(lambda agent:get_agent_path(agent),axis = 1)
agent_data['path'] = r.apply(lambda x:x[0])
agent_data['cumsumlength'] = r.apply(lambda x:x[1])